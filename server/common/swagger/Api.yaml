swagger: "2.0"
info:
  version: 1.0.0
  title: Salash
  description: API for interacting with the Salash-backend
basePath: /api/v1
tags:
  - name: Recipes
  - name: Categories
  - name: Specification
    description: The swagger API specification

consumes:
  - application/json
produces:
  - application/json
paths:
  /recipes:
    get:
      tags:
        - Recipes
      summary: find recipes by search criteria
      parameters:
        - name: ingredients
          in: query
          description: a list of required ingredients
          type: array
          items:
            type: string
        - name: categories
          in: query
          description: a list of required categories
          type: array
          items:
            type: string
        - name: author
          in: query
          description: the originator of the recipe
          type: string
        - name: limit
          in: query
          description: the maximum number of entries per page 
          type: integer
          default: 10
          maximum: 200.0
          minimum: 1.0
        - name: page
          in: query
          description: the page number
          type: integer
          default: 1
          minimum: 1
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Recipe"
        400:
          description: service not found
        500:
          description: server error
    post:
      tags:
        - Recipes
      consumes:
        - application/json
      summary: add a new recipe to the database
      parameters:
      - in: body
        name: body
        description: Pet object that needs to be added to the store
        required: true
        schema:
          $ref: "#/definitions/RecipesPostBody"
      responses:
        200:
          description: successful operation
          schema:
            $ref: "#/definitions/Recipe"
  /recipes/{id}:
    get:
      tags:
        - Recipes
      summary: get a recipe by id
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the entity to retrieve
          type: string
      responses:
        200:
          description: Return the recipe with the specified id
        404:
          description: Example not
    delete:
      tags:
        - Recipes
      summary: deletes a recipe from the database
      parameters:
        - in: path
          name: id
          type: string
          required: true
          description: the id of the recipe to delete
      responses:
        200:
          description: successful operation
        400:
          description: invalid ID supplied
        404:
          description: recipe not found
    put:
      tags:
        - Recipes
      summary: updates an existing recipe
      parameters:
        - in: body
          name: body
          description: and object with the fields that should be updated
          schema:
            $ref: "#/definitions/RecipesPostBody"
      responses:
        200:
          description: successful operation
        400:
          description: invalid ID supplied
        404:
          description: recipe not found
  /categories:
    get:
      tags:
        - Categories
      summary: get all categories
      responses:
        200:
          description: sucessful operation
        
  /spec:
    get:
      tags:
        - Specification
      responses:
        200:
          description: Return the API specification
definitions:
  Recipes:
    type: object
    properties:
      pagination:
        $ref: "#/definitions/Pagination"
      data:
        type: array
        items:
          $ref: "#/definitions/Recipe"
  RecipesPostBody:
    type: object
    required:
      - title
      - ingredients
      - categories
      - user
    properties:
      title:
        type: string
        example: flower power salad
      user:
        type: string
        example: ciwuuaju90002dwla2ejeu2ri
      ingredients:
        type: array
        items:
          type: string
          example: ciwuuaju90002dwla2ejeu3rt
      categories:
        type: array
        items:
          type: string
          example: ciwuuaju90002dwla2ejeukjk
      description:
        type: string
        example: Healthy quick colorful salad with kale
      instructions:
        type: string
        example: chop the tomatoes and carrots finely and mix with the kale.
      image:
        type: string
        example: http://images.com/image.jpg
      author:
        $ref: "#/definitions/Author"
  Recipe:
    type: object
    required:
      - cuid
      - title
    properties:
      cuid:
        type: string
        example: ciwuuaju90002dwla2ejeu2rz
      title:
        type: string
        example: Mushroom taco meat
      slug:
        type: string
        example: mushroom-taco-meat
      imageUrl:
        type: string
        example: http://images.com/image.jpg
      description:
        type: string
        example: delicious taco filling made from any kind of mushrooms
      instructions:
        type: string
        example: just mix all the ingredients and chill
      author:
        $ref: "#/definitions/Author"
      user:
       $ref: "#/definitions/User"
      ingredients:
        type: array
        items:
          $ref: "#/definitions/Ingredient"
      categories:
        type: array
        items:
          $ref: "#/definitions/Category"
      loves:
        type: integer
        example: 1
      saved:
        type: integer
        example: 1
      
  Ingredient:
    type: object
    properties:
      id:
        type: string
        example: ciwuuaju90002dwla2ejeu2ri
      name:
        type: string
        example: brazil nut
      slug:
        type: string
        example: brazil-nut
      amount:
        type: string
        example: 2
  Category:
    type: object
    properties:
      id:
        type: string
        example: ciwuuaju90002dwla2ejeu2ri
      name:
        type: string
        example: main course
      slug:
        type: string
        example: main-course
  User:
    type: object
    properties:
      id:
        type: string
        example: ciwuuaju90002dwla2ejeu2ri
      username:
        type: string
        example: autofagist
  Comment:
    type: object
    properties:
      user:
        $ref: "#/definitions/User"
      text:
        type: string
        example: This recipe is like the best shit evah bruh!
  Author:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        example: ciwuuaju90002dwla2ejeu2ri
      name: 
        type: string
        example: Yovana Mendoza
      alias:
        type: string
        example: Rawvana
      facebook:
        type: string
        example: https://www.facebook.com/rawvana/
      instagram:
        type: string
        example: https://www.instagram.com/rawvana/
      twitter:
        type: string
        example: https://twitter.com/rawvana 
  Pagination:
    type: object
    properties:
      itemsPerPage:
        type: integer
        example: 10
      currentPage:
        type: integer
        example: 3
      totalPages:
        type: integer
        example: 15
      previousPage:
        type: integer
        example: 2
      nextPage:
        type: integer
        example: 4